package lcson.loadsearch.test;

public class Nodes {
	int[][] nodesType = {
			{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
			{2,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2},
			{2,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2},
			{2,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2},
			{2,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2},
	      	{2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2},
		    {2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2},
			{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2},
			{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2},
	      	{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2},
			{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2},
			{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2},
			{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2},
			{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2},
			{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2},
			{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2},
			{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2},
			{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2},
			{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2},
			{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
		};
	
	Node nodes[][];
	
	public Node[][] makeNode() {
		nodes = new Node[20][20];
		for (int i=0; i<20; i++) {
			for (int j=0; j<20; j++) {
				if (nodesType[i][j] == 0)
					nodes[i][j] = new Node(i, j, 0);
				else if (nodesType[i][j] == 1)
					nodes[i][j] = new Node(i, j, 1);
				else
					nodes[i][j] = new Node(i, j, 2);
			}
		}
		return nodes;
	}
	
	
}
